// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StartspelerMVC.Data;

namespace StartspelerMVC.Migrations
{
    [DbContext(typeof(StartspelerContext))]
    [Migration("20210422144004_FifthCreate")]
    partial class FifthCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StartspelerMVC.Models.Bestellijn", b =>
                {
                    b.Property<int>("BestellijnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aantal")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("BestellijnID");

                    b.HasIndex("ProductID");

                    b.ToTable("Bestellijn","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Bestelling", b =>
                {
                    b.Property<int>("BestellingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BestellingID");

                    b.HasIndex("UserID");

                    b.ToTable("Bestelling","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieID");

                    b.ToTable("Categorie","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Drankkaart", b =>
                {
                    b.Property<int>("DrankkaartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aantal_Verbruikt")
                        .HasColumnType("int");

                    b.Property<int>("DrankkaartTypeID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("DrankkaartID");

                    b.HasIndex("DrankkaartTypeID");

                    b.HasIndex("userID");

                    b.ToTable("Drankkaart","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.DrankkaartType", b =>
                {
                    b.Property<int>("DrankkaartTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Grootte")
                        .HasColumnType("int");

                    b.HasKey("DrankkaartTypeID");

                    b.ToTable("DrankkaartType","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Evenement", b =>
                {
                    b.Property<int>("EvenementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("EvenementTypeID")
                        .HasColumnType("int");

                    b.Property<float>("Kostprijs")
                        .HasColumnType("real");

                    b.Property<int>("Max_Deelnemers")
                        .HasColumnType("int");

                    b.Property<DateTime>("Startdatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EvenementID");

                    b.HasIndex("EvenementTypeID");

                    b.ToTable("Evenement","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.EvenementType", b =>
                {
                    b.Property<int>("EvenementTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EvenementTypeID");

                    b.ToTable("EvenementType","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Inschrijving", b =>
                {
                    b.Property<int>("InschrijvingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EvenementID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("InschrijvingID");

                    b.HasIndex("EvenementID");

                    b.HasIndex("UserID");

                    b.ToTable("Inschrijving","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int>("Ijskast")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OverigeStock")
                        .HasColumnType("int");

                    b.Property<float>("Prijs")
                        .HasColumnType("real");

                    b.HasKey("ProductID");

                    b.HasIndex("CategorieID");

                    b.ToTable("Product","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User","SS");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Bestellijn", b =>
                {
                    b.HasOne("StartspelerMVC.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("StartspelerMVC.Models.Bestelling", b =>
                {
                    b.HasOne("StartspelerMVC.Models.User", null)
                        .WithMany("Bestellingen")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StartspelerMVC.Models.Drankkaart", b =>
                {
                    b.HasOne("StartspelerMVC.Models.DrankkaartType", null)
                        .WithMany("Drankkaarten")
                        .HasForeignKey("DrankkaartTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StartspelerMVC.Models.User", null)
                        .WithMany("Drankkaarten")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StartspelerMVC.Models.Evenement", b =>
                {
                    b.HasOne("StartspelerMVC.Models.EvenementType", null)
                        .WithMany("Evenementen")
                        .HasForeignKey("EvenementTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StartspelerMVC.Models.Inschrijving", b =>
                {
                    b.HasOne("StartspelerMVC.Models.Evenement", null)
                        .WithMany("Inschrijvingen")
                        .HasForeignKey("EvenementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StartspelerMVC.Models.User", null)
                        .WithMany("Inschrijvingen")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StartspelerMVC.Models.Product", b =>
                {
                    b.HasOne("StartspelerMVC.Models.Categorie", null)
                        .WithMany("Producten")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
